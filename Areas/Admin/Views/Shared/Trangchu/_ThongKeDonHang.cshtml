@using System.Data.Entity;  
@using doAnChuyenNghanh02.Models
@{
    MotoDBContext dBContext = new MotoDBContext();
    var thongKeTheoThang = dBContext.DONHANGs
        .Where(dh => dh.NGAYDAT.HasValue)
        .GroupBy(dh => new
        {
            Month = dh.NGAYDAT.Value.Month,
            Year = dh.NGAYDAT.Value.Year
        })
        .Select(g => new
        {
            Month = g.Key.Month,
            Year = g.Key.Year,
            soluong = g.Count()
        })
        .ToList()
        .Select(item => new ThongKeDonHangViewModel
        {
            ThangNam = $"{item.Month}/{item.Year}",  // Định dạng tháng/năm sau khi dữ liệu đã được tải
            soluong = item.soluong
        })
        .OrderBy(item => item.ThangNam)  // Sắp xếp theo tháng/năm
        .ToList();
}
<div style="display: none">
    @{
        foreach (var item in thongKeTheoThang)
        {
            <div class="thangnam-class">@item.ThangNam</div>
            <div class="soluong-class">@item.soluong</div>
        }
    }
</div>
<div class="col-sm-4" style="margin-top:10%">
    <div id="myPlot1" style="width: 100%; max-width: 500px; margin-top: 10%"></div>
</div>

<script>
    // Lấy tất cả các tháng/năm và số lượng từ các thẻ div
    const thangNamElements = document.querySelectorAll('.thangnam-class');
    const soluongElements1 = document.querySelectorAll('.soluong-class');

    // Tạo mảng bienx và bieny
    const bienx = [];
    const bieny = [];

    // Lặp qua các phần tử và thêm dữ liệu vào mảng
    thangNamElements.forEach((element, index) => {
        bienx.push(element.innerText);
        bieny.push(parseInt(soluongElements1[index].innerText));
    });

    // Tạo biểu đồ Bar
    const layout1 = {
        title: "Thống kê đơn hàng theo tháng",
        xaxis: { title: "Tháng/Năm" },
        yaxis: { title: "Số lượng đơn hàng" }
    };

    const data1 = [{
        x: bienx,
        y: bieny,
        type: "line"  // Sử dụng loại biểu đồ thanh
    }];

    Plotly.newPlot("myPlot1", data1, layout1);
</script>